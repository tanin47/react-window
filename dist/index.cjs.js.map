{"version":3,"file":"index.cjs.js","sources":["../src/timer.js","../src/domHelpers.js","../src/createGridComponent.js","../src/VariableSizeGrid.js","../src/createListComponent.js","../src/VariableSizeList.js","../src/FixedSizeGrid.js","../src/FixedSizeList.js","../src/shallowDiffers.js","../src/areEqual.js","../src/shouldComponentUpdate.js"],"sourcesContent":["// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        columnCount,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        outerTagName,\n        rowCount,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      const items = [];\n      if (columnCount > 0 && rowCount) {\n        for (\n          let rowIndex = rowStartIndex;\n          rowIndex <= rowStopIndex;\n          rowIndex++\n        ) {\n          for (\n            let columnIndex = columnStartIndex;\n            columnIndex <= columnStopIndex;\n            columnIndex++\n          ) {\n            items.push(\n              createElement(children, {\n                columnIndex,\n                data: itemData,\n                isScrolling: useIsScrolling ? isScrolling : undefined,\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\n                rowIndex,\n                style: this._getItemStyle(rowIndex, columnIndex),\n              })\n            );\n          }\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll: this._onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: estimatedTotalHeight,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: estimatedTotalWidth,\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        const offset = getColumnOffset(\n          this.props,\n          columnIndex,\n          this._instanceProps\n        );\n        const isRtl = direction === 'rtl';\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offset,\n          right: isRtl ? offset : undefined,\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createGridComponent from './createGridComponent';\n\nimport type { Props, ScrollToAlign } from './createGridComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedColumnWidth: number,\n  estimatedRowHeight: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\ntype ItemType = 'column' | 'row';\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype ItemMetadataMap = { [index: number]: ItemMetadata };\ntype InstanceProps = {|\n  columnMetadataMap: ItemMetadataMap,\n  estimatedColumnWidth: number,\n  estimatedRowHeight: number,\n  lastMeasuredColumnIndex: number,\n  lastMeasuredRowIndex: number,\n  rowMetadataMap: ItemMetadataMap,\n|};\n\nconst getEstimatedTotalHeight = (\n  props: Props<any>,\n  instanceProps: InstanceProps\n) => {\n  const itemMetadata = getItemMetadata(\n    'row',\n    props,\n    props.rowCount - 1,\n    instanceProps\n  );\n  return itemMetadata.offset + itemMetadata.size;\n};\n\nconst getEstimatedTotalWidth = (\n  props: Props<any>,\n  instanceProps: InstanceProps\n) => {\n  const itemMetadata = getItemMetadata(\n    'column',\n    props,\n    props.columnCount - 1,\n    instanceProps\n  );\n  return itemMetadata.offset + itemMetadata.size;\n};\n\nconst getItemMetadata = (\n  itemType: ItemType,\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  let itemMetadataMap, itemSize, lastMeasuredIndex;\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = ((props.columnWidth: any): itemSizeGetter);\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = ((props.rowHeight: any): itemSizeGetter);\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = itemSize(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  itemType: ItemType,\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  let itemMetadataMap, lastMeasuredIndex;\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      itemType,\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      itemType,\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  itemType: ItemType,\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(\n      itemType,\n      props,\n      middle,\n      instanceProps\n    ).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  itemType: ItemType,\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(itemType, props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    itemType,\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getOffsetForIndexAndAlignment = (\n  itemType: ItemType,\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: InstanceProps,\n  scrollbarSize: number\n): number => {\n  const size = itemType === 'column' ? props.width : props.height;\n  const itemMetadata = getItemMetadata(itemType, props, index, instanceProps);\n\n  // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n  const estimatedTotalSize =\n    itemType === 'column'\n      ? getEstimatedTotalWidth(props, instanceProps)\n      : getEstimatedTotalHeight(props, instanceProps);\n\n  const maxOffset = Math.max(\n    0,\n    Math.min(estimatedTotalSize - size, itemMetadata.offset)\n  );\n  const minOffset = Math.max(\n    0,\n    itemMetadata.offset - size + scrollbarSize + itemMetadata.size\n  );\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n    case 'end':\n      return minOffset;\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n  }\n};\n\nconst VariableSizeGrid = createGridComponent({\n  getColumnOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata('column', props, index, instanceProps).offset,\n\n  getColumnStartIndexForOffset: (\n    props: Props<any>,\n    scrollLeft: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem('column', props, instanceProps, scrollLeft),\n\n  getColumnStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollLeft: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { columnCount, width } = props;\n\n    const itemMetadata = getItemMetadata(\n      'column',\n      props,\n      startIndex,\n      instanceProps\n    );\n    const maxOffset = scrollLeft + width;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  getColumnWidth: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.columnMetadataMap[index].size,\n\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n\n  getOffsetForColumnAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps,\n    scrollbarSize: number\n  ): number =>\n    getOffsetForIndexAndAlignment(\n      'column',\n      props,\n      index,\n      align,\n      scrollOffset,\n      instanceProps,\n      scrollbarSize\n    ),\n\n  getOffsetForRowAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps,\n    scrollbarSize: number\n  ): number =>\n    getOffsetForIndexAndAlignment(\n      'row',\n      props,\n      index,\n      align,\n      scrollOffset,\n      instanceProps,\n      scrollbarSize\n    ),\n\n  getRowOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata('row', props, index, instanceProps).offset,\n\n  getRowHeight: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.rowMetadataMap[index].size,\n\n  getRowStartIndexForOffset: (\n    props: Props<any>,\n    scrollTop: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem('row', props, instanceProps, scrollTop),\n\n  getRowStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollTop: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { rowCount, height } = props;\n\n    const itemMetadata = getItemMetadata(\n      'row',\n      props,\n      startIndex,\n      instanceProps\n    );\n    const maxOffset = scrollTop + height;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const {\n      estimatedColumnWidth,\n      estimatedRowHeight,\n    } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {},\n    };\n\n    instance.resetAfterColumnIndex = (\n      columnIndex: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instance.resetAfterIndices({ columnIndex, shouldForceUpdate });\n    };\n\n    instance.resetAfterRowIndex = (\n      rowIndex: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instance.resetAfterIndices({ rowIndex, shouldForceUpdate });\n    };\n\n    instance.resetAfterIndices = ({\n      columnIndex,\n      rowIndex,\n      shouldForceUpdate = true,\n    }: {\n      columnIndex?: number,\n      rowIndex?: number,\n      shouldForceUpdate: boolean,\n    }) => {\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(\n          instanceProps.lastMeasuredColumnIndex,\n          columnIndex - 1\n        );\n      }\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(\n          instanceProps.lastMeasuredRowIndex,\n          rowIndex - 1\n        );\n      }\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error(\n          'An invalid \"columnWidth\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${\n              columnWidth === null ? 'null' : typeof columnWidth\n            }\" was specified.`\n        );\n      } else if (typeof rowHeight !== 'function') {\n        throw Error(\n          'An invalid \"rowHeight\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeGrid;\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const isRtl = direction === 'rtl';\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offsetHorizontal,\n          right: isRtl ? offsetHorizontal : undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, itemCount, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","// @flow\n\nimport createGridComponent from './createGridComponent';\n\nimport type { Props, ScrollToAlign } from './createGridComponent';\n\nconst FixedSizeGrid = createGridComponent({\n  getColumnOffset: ({ columnWidth }: Props<any>, index: number): number =>\n    index * ((columnWidth: any): number),\n\n  getColumnWidth: ({ columnWidth }: Props<any>, index: number): number =>\n    ((columnWidth: any): number),\n\n  getRowOffset: ({ rowHeight }: Props<any>, index: number): number =>\n    index * ((rowHeight: any): number),\n\n  getRowHeight: ({ rowHeight }: Props<any>, index: number): number =>\n    ((rowHeight: any): number),\n\n  getEstimatedTotalHeight: ({ rowCount, rowHeight }: Props<any>) =>\n    ((rowHeight: any): number) * rowCount,\n\n  getEstimatedTotalWidth: ({ columnCount, columnWidth }: Props<any>) =>\n    ((columnWidth: any): number) * columnCount,\n\n  getOffsetForColumnAndAlignment: (\n    { columnCount, columnWidth, width }: Props<any>,\n    columnIndex: number,\n    align: ScrollToAlign,\n    scrollLeft: number,\n    instanceProps: typeof undefined,\n    scrollbarSize: number\n  ): number => {\n    const lastColumnOffset = Math.max(\n      0,\n      columnCount * ((columnWidth: any): number) - width\n    );\n    const maxOffset = Math.min(\n      lastColumnOffset,\n      columnIndex * ((columnWidth: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      columnIndex * ((columnWidth: any): number) -\n        width +\n        scrollbarSize +\n        ((columnWidth: any): number)\n    );\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getOffsetForRowAndAlignment: (\n    { rowHeight, height, rowCount }: Props<any>,\n    rowIndex: number,\n    align: ScrollToAlign,\n    scrollTop: number,\n    instanceProps: typeof undefined,\n    scrollbarSize: number\n  ): number => {\n    const lastRowOffset = Math.max(\n      0,\n      rowCount * ((rowHeight: any): number) - height\n    );\n    const maxOffset = Math.min(\n      lastRowOffset,\n      rowIndex * ((rowHeight: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      rowIndex * ((rowHeight: any): number) -\n        height +\n        scrollbarSize +\n        ((rowHeight: any): number)\n    );\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getColumnStartIndexForOffset: (\n    { columnWidth, columnCount }: Props<any>,\n    scrollLeft: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(\n        columnCount - 1,\n        Math.floor(scrollLeft / ((columnWidth: any): number))\n      )\n    ),\n\n  getColumnStopIndexForStartIndex: (\n    { columnWidth, columnCount, width }: Props<any>,\n    startIndex: number,\n    scrollLeft: number\n  ): number => {\n    const left = startIndex * ((columnWidth: any): number);\n    const numVisibleColumns = Math.ceil(\n      (width + scrollLeft - left) / ((columnWidth: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        columnCount - 1,\n        startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  getRowStartIndexForOffset: (\n    { rowHeight, rowCount }: Props<any>,\n    scrollTop: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(rowCount - 1, Math.floor(scrollTop / ((rowHeight: any): number)))\n    ),\n\n  getRowStopIndexForStartIndex: (\n    { rowHeight, rowCount, height }: Props<any>,\n    startIndex: number,\n    scrollTop: number\n  ): number => {\n    const top = startIndex * ((rowHeight: any): number);\n    const numVisibleRows = Math.ceil(\n      (height + scrollTop - top) / ((rowHeight: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        rowCount - 1,\n        startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error(\n          'An invalid \"columnWidth\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${\n              columnWidth === null ? 'null' : typeof columnWidth\n            }\" was specified.`\n        );\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error(\n          'An invalid \"rowHeight\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeGrid;\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst FixedSizeList = createListComponent({\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\n    index * ((itemSize: any): number),\n\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\n    ((itemSize: any): number),\n\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\n    ((itemSize: any): number) * itemCount,\n\n  getOffsetForIndexAndAlignment: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const lastItemOffset = Math.max(\n      0,\n      itemCount * ((itemSize: any): number) - size\n    );\n    const maxOffset = Math.min(\n      lastItemOffset,\n      index * ((itemSize: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center': {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    { itemCount, itemSize }: Props<any>,\n    offset: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\n    ),\n\n  getStopIndexForStartIndex: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    startIndex: number,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const offset = startIndex * ((itemSize: any): number);\n    const size = (((isHorizontal ? width : height): any): number);\n    const numVisibleItems = Math.ceil(\n      (size + scrollOffset - offset) / ((itemSize: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        itemCount - 1,\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeList;\n","// @flow\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nexport default function shallowDiffers(prev: Object, next: Object): boolean {\n  for (let attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n  for (let attribute in next) {\n    if (prev[attribute] !== next[attribute]) {\n      return true;\n    }\n  }\n  return false;\n}\n","// @flow\n\nimport shallowDiffers from './shallowDiffers';\n\n// Custom comparison function for React.memo().\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\nexport default function areEqual(\n  prevProps: Object,\n  nextProps: Object\n): boolean {\n  const { style: prevStyle, ...prevRest } = prevProps;\n  const { style: nextStyle, ...nextRest } = nextProps;\n\n  return (\n    !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest)\n  );\n}\n","// @flow\n\nimport areEqual from './areEqual';\nimport shallowDiffers from './shallowDiffers';\n\n// Custom shouldComponentUpdate for class components.\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\nexport default function shouldComponentUpdate(\n  nextProps: Object,\n  nextState: Object\n): boolean {\n  return (\n    !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState)\n  );\n}\n"],"names":["hasNativePerformanceNow","performance","now","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","requestTimeout","callback","delay","start","tick","call","requestAnimationFrame","size","getScrollbarSize","recalculate","div","document","createElement","style","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","IS_SCROLLING_DEBOUNCE_INTERVAL","defaultItemKey","columnIndex","data","rowIndex","devWarningsOverscanCount","devWarningsOverscanRowsColumnsCount","devWarningsTagName","process","env","NODE_ENV","window","WeakSet","createGridComponent","getColumnOffset","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getColumnWidth","getEstimatedTotalHeight","getEstimatedTotalWidth","getOffsetForColumnAndAlignment","getOffsetForRowAndAlignment","getRowHeight","getRowOffset","getRowStartIndexForOffset","getRowStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","props","_instanceProps","_resetIsScrollingTimeoutId","_outerRef","state","instance","isScrolling","horizontalScrollDirection","initialScrollLeft","scrollTop","initialScrollTop","scrollUpdateWasRequested","verticalScrollDirection","_callOnItemsRendered","memoizeOne","overscanColumnStartIndex","overscanColumnStopIndex","overscanRowStartIndex","overscanRowStopIndex","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","columnWidth","rowHeight","itemStyleCache","_getItemStyleCache","key","hasOwnProperty","offset","isRtl","position","left","undefined","right","top","_","__","___","_onScroll","event","currentTarget","clientHeight","scrollHeight","scrollWidth","setState","prevState","calculatedScrollLeft","Math","max","min","calculatedScrollTop","_resetIsScrollingDebounced","_outerRefSetter","ref","outerRef","current","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps","scrollTo","scrollToItem","align","columnCount","rowCount","scrollbarSize","estimatedTotalHeight","estimatedTotalWidth","horizontalScrollbarSize","verticalScrollbarSize","componentDidMount","_callPropsCallbacks","componentDidUpdate","componentWillUnmount","render","children","className","innerRef","innerElementType","innerTagName","itemData","itemKey","outerElementType","outerTagName","useIsScrolling","_getHorizontalRangeToRender","columnStartIndex","columnStopIndex","_getVerticalRangeToRender","rowStartIndex","rowStopIndex","items","push","WebkitOverflowScrolling","willChange","pointerEvents","overscanColumnCount","overscanColumnsCount","overscanCount","overscanCountResolved","startIndex","stopIndex","overscanBackward","overscanForward","overscanRowCount","overscanRowsCount","PureComponent","defaultProps","has","add","console","warn","Error","DEFAULT_ESTIMATED_ITEM_SIZE","instanceProps","itemMetadata","getItemMetadata","itemType","index","itemMetadataMap","itemSize","lastMeasuredIndex","columnMetadataMap","lastMeasuredColumnIndex","rowMetadataMap","lastMeasuredRowIndex","i","findNearestItem","lastMeasuredItemOffset","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentOffset","itemCount","interval","getOffsetForIndexAndAlignment","scrollOffset","estimatedTotalSize","maxOffset","minOffset","round","VariableSizeGrid","estimatedColumnWidth","estimatedRowHeight","resetAfterColumnIndex","shouldForceUpdate","resetAfterIndices","resetAfterRowIndex","forceUpdate","devWarningsDirection","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getStartIndexForOffset","getStopIndexForStartIndex","scrollDirection","initialScrollOffset","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","layout","isHorizontal","offsetHorizontal","_onScrollHorizontal","_onScrollVertical","_getRangeToRender","estimatedItemSize","totalSizeOfMeasuredItems","numUnmeasuredItems","totalSizeOfUnmeasuredItems","VariableSizeList","resetAfterIndex","FixedSizeGrid","lastColumnOffset","middleOffset","ceil","lastRowOffset","numVisibleColumns","numVisibleRows","FixedSizeList","lastItemOffset","numVisibleItems","shallowDiffers","prev","next","attribute","areEqual","prevProps","prevStyle","prevRest","nextStyle","nextRest","shouldComponentUpdate","nextState"],"mappings":"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"}